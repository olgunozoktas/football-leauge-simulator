import{r as i,a as s,j}from"./app-DKWSqCLn.js";const h=i.createContext(void 0),$=({children:u})=>{const[y,o]=i.useState([]),[E,n]=i.useState([]),[f,m]=i.useState(0),[k,p]=i.useState(!1),[F,e]=i.useState(!1),[_,a]=i.useState(null);i.useEffect(()=>{x()},[]);const x=async()=>{try{e(!0),a(null);const t=await s.get("/api/simulation/state");m(t.data.current_week),p(t.data.is_simulation_complete);const r=await s.get("/api/teams");o(r.data);const l=await s.get("/api/fixtures");n(l.data),e(!1)}catch(t){a("Failed to load initial data"),e(!1),console.error("Error fetching initial data:",t)}},R=async t=>{try{e(!0),a(null);const r=await s.post(`/api/simulation/match/${t}`);n(c=>c.map(d=>d.id===t?r.data.match:d));const l=await s.get("/api/teams");o(l.data),e(!1)}catch(r){a("Failed to simulate match"),e(!1),console.error("Error simulating match:",r)}},S=async()=>{try{e(!0),a(null);const t=await s.post("/api/simulation/next-week");m(t.data.week),p(t.data.is_complete),o(t.data.teams);const r=await s.get("/api/fixtures");n(r.data),e(!1)}catch(t){a("Failed to simulate next week"),e(!1),console.error("Error simulating next week:",t)}},C=async()=>{try{e(!0),a(null);const t=await s.post("/api/simulation/all-weeks");p(t.data.is_complete),o(t.data.teams),m(6);const r=await s.get("/api/fixtures");n(r.data),e(!1)}catch(t){a("Failed to simulate all weeks"),e(!1),console.error("Error simulating all weeks:",t)}},T=async()=>{try{e(!0),a(null);const t=await s.post("/api/simulation/reset");m(t.data.current_week),p(t.data.is_simulation_complete),o(t.data.teams),n(t.data.fixtures),e(!1)}catch(t){a("Failed to reset simulation"),e(!1),console.error("Error resetting simulation:",t)}},v=async(t,r,l)=>{try{e(!0),a(null);const c=await s.put(`/api/fixtures/${t}/result`,{home_goals:r,away_goals:l});n(W=>W.map(g=>g.id===t?c.data.match:g));const d=await s.get("/api/teams");o(d.data),f>=4&&w(),e(!1)}catch(c){a("Failed to update match result"),e(!1),console.error("Error updating match result:",c)}},w=async()=>{try{e(!0),a(null);const t=await s.post("/api/simulation/predictions");o(t.data.teams),e(!1)}catch(t){a("Failed to update predictions"),e(!1),console.error("Error updating predictions:",t)}},z=async()=>{try{e(!0),a(null);const t=await s.post("/api/teams/initialize");o(t.data.teams),e(!1)}catch(t){a("Failed to initialize teams"),e(!1),console.error("Error initializing teams:",t)}},P=async()=>{try{e(!0),a(null);const t=await s.post("/api/fixtures/generate");n(t.data.fixtures),e(!1)}catch(t){a("Failed to generate fixtures"),e(!1),console.error("Error generating fixtures:",t)}};return j.jsx(h.Provider,{value:{teams:y,fixtures:E,currentWeek:f,isSimulationComplete:k,loading:F,error:_,simulateMatch:R,simulateNextWeek:S,simulateAllWeeks:C,resetSimulation:T,updateMatchResult:v,fetchInitialData:x,updatePredictions:w,initializeTeams:z,generateFixtures:P},children:u})},b=()=>{const u=i.useContext(h);if(u===void 0)throw new Error("useTeamContext must be used within a TeamProvider");return u};export{$ as TeamProvider,b as useTeamContext};
